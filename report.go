package tools

import (
	"fmt"
	"net/http"
	"net/url"
	"strings"

	"github.com/sendgrid/sendgrid-go"
	"github.com/sendgrid/sendgrid-go/helpers/mail"
)

type Email struct {
	From    string
	To      string
	Subject string
	Body    string
}

func (email Email) String() string {
	return fmt.Sprintf("From: %s\nTo: %s\nSubject: %s\nBody: %s",
		email.From, email.To, email.Subject, email.Body)
}

func Sendgrid(email Email, sendgridApiKey string) (err error) {
	if len(email.To) == 0 {
		return fmt.Errorf("nobody to send email to! email:\n%s", email)
	}
	from := mail.NewEmail(email.From, email.From)
	subject := email.Subject
	to := mail.NewEmail(email.To, email.To)
	plainTextContent := email.Body
	htmlContent := "<html><pre>" + email.Body + "</pre></html>"
	message := mail.NewSingleEmail(from, subject, to, plainTextContent, htmlContent)
	client := sendgrid.NewSendClient(sendgridApiKey)
	_, err = client.Send(message)
	if err != nil {
		Red("sendmail error! %v\n", err)
	} else {
		Green("Email sent to %q\n", email.To)
	}
	return
}

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
// curl -s -X POST --data "id=id&title=title&message=message&type=system" https://wirepusher.com/send
func Wirepusher(id, title, message, system string) (err error) {
	params := url.Values{}
	params.Add("id", id)
	params.Add("title", title)
	params.Add("message", message)
	params.Add("type", system)
	body := strings.NewReader(params.Encode())
	req, err := http.NewRequest("POST", "https://wirepusher.com/send", body)
	if err != nil {
		return
	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		return
	}
	if resp.StatusCode != 200 {
		return fmt.Errorf("Message not sent! HTTP response: %s", resp.Status)
	}
	defer resp.Body.Close()
	return
}
